name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root deps
        run: npm ci || npm install

      - name: ESLint (frontend + tests)
        run: npx eslint "frontend/**/*.js" "tests/**/*.js" || true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -U pip
          pip install -r backend/requirements.txt

      - name: Install security tools (Python)
        run: |
          python -m pip install bandit pip-audit

      - name: Security - JS deps
        run: npm run lint:security:deps:js

      - name: Security - Python deps
        run: npm run lint:security:deps:py

      - name: Secrets scan
        run: |
          curl -sSL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | bash
          ./gitleaks detect --no-banner --exit-code 0

      - name: SAST - Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: tests/security/semgrep/semgrep.yaml
        continue-on-error: true

  e2e-and-dast:
    runs-on: ubuntu-latest
    needs: lint-and-unit
    services:
      backend:
        image: tiangolo/uvicorn-gunicorn-fastapi:python3.11
        ports:
          - 8000:80
        options: >-
          --health-cmd="python - <<'PY'\nimport sys, urllib.request\ntry:\n  with urllib.request.urlopen('http://localhost:80/health', timeout=2) as r:\n    sys.exit(0 if r.status==200 else 1)\nexcept Exception:\n  sys.exit(1)\nPY" 
          --health-interval=5s --health-timeout=3s --health-retries=50
        volumes:
          - ./backend:/app
      frontend:
        image: node:20
        ports:
          - 3000:3000
        options: >-
          --health-cmd="node -e \"fetch('http://localhost:3000').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""
          --health-interval=5s --health-timeout=3s --health-retries=50
        command: bash -lc "npm i -g serve && serve ./frontend -l 3000"
        volumes:
          - ./:/workspace
          - ./frontend:/frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Cypress
        run: npm ci || npm install

      - name: Run Cypress (headless)
        run: npx cypress run

      - name: DAST - OWASP ZAP baseline (best-effort)
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:3000'
        continue-on-error: true

      - name: Container scan (Trivy) - FS mode
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'
          format: 'table'
          output: 'trivy-fs.txt'
          scanners: 'vuln,secret,misconfig,license,config'

  k6:
    runs-on: ubuntu-latest
    needs: e2e-and-dast
    services:
      backend:
        image: tiangolo/uvicorn-gunicorn-fastapi:python3.11
        ports:
          - 8000:80
        options: >-
          --health-cmd="python - <<'PY'\nimport sys, urllib.request\ntry:\n  with urllib.request.urlopen('http://localhost:80/health', timeout=2) as r:\n    sys.exit(0 if r.status==200 else 1)\nexcept Exception:\n  sys.exit(1)\nPY" 
          --health-interval=5s --health-timeout=3s --health-retries=50
        volumes:
          - ./backend:/app
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Build k6 tests
        working-directory: tests/performance/k6
        run: |
          npm ci || npm install
          npm run build
      - name: Run k6 smoke
        uses: grafana/k6-action@v0.3.1
        with:
          filename: tests/performance/k6/dist/smoke.test.js
        env:
          API_BASE_URL: http://localhost:8000


